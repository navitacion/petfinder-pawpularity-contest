hydra:
  run:
    dir: hydra_output/

data:
  data_dir: ./input
  asset_dir: ./assets
  seed: 0
  img_size: &image_size 380
  n_splits: 5
  save_top_k: 3
  target_type: regression    # classification / regression
  total_step: None

model:
  backbone: tf_efficientnet_b0_ns
  pretrained: True
  out_dim: 1
  hidden_size: 128
  dropout_rate: 0.1

train:
  lr: 1e-5
  epoch: 20
  fold: 0
  batch_size: 32
  num_workers: 8
  weight_decay: 1e-5
  optimizer: adam
  scheduler: cosine
  warmup_step: 100
  num_cycles: 1
  mixup_pct: 0.5
  mixup_alpha: 0.5

aug_kwargs:
  aug_train:
    RandomResizedCrop: {"height": *image_size, "width": *image_size, scale: [0.5, 1.0]}
    HorizontalFlip: {"p": 0.5}
    VerticalFlip: {"p": 0.5}
    ColorJitter: {"brightness": 0.1, "contrast": 0.1, "saturation": 0.1}
    MotionBlur: {"p": 0.5}
    Normalize: {"mean": [0.485, 0.456, 0.406], "std": [0.229, 0.224, 0.225]}
#    CoarseDropout: {"max_holes": 6, "max_height": 8, "max_width": 8}

  aug_val:
    Resize: {"height": *image_size, "width": *image_size}
    Normalize: {"mean": [0.485, 0.456, 0.406], "std": [0.229, 0.224, 0.225]}

  aug_test:
    Resize: {"height": *image_size, "width": *image_size}
    Normalize: {"mean": [0.485, 0.456, 0.406], "std": [0.229, 0.224, 0.225]}